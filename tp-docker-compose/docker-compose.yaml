services:
  redis:
    image: redis:5.0-alpine3.10
    networks:
      - vote_network
  db:
    image: postgres:9.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - result_network
    volumes:
      - "data-postgres:/var/lib/postgresql/data"
  result:
    build: 
      context: ./result
      dockerfile: Dockerfile
    # scalabilité à la création du docker compose
    deploy:
      replicas: 2
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      # si scalable, il faut indiquer un interval de ports
      - "8080-8082:4000"
    depends_on:
      - db
    networks:
      - result_network
  worker:
    build: 
      context: ./worker
      dockerfile: Dockerfile
    networks:
      - result_network
      - vote_network
    depends_on:
      - db
      - redis
  vote:
    build: 
      context: ./vote
      dockerfile: Dockerfile
    ports:
      - "8088:80"
    depends_on:
      - redis
    networks:
      - vote_network

volumes:
  data-postgres:

networks:
  vote_network:
    driver: bridge
  result_network:
    driver: bridge
